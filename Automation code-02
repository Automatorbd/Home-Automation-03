#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

// Wi-Fi credentials
const char* ssid = "T R I N I T Y"; 
const char* password = "Shihab007!2#4%";

// Pin assignments
const int light1Pin = 4;
const int light2Pin = 5;
const int buzzerPin = 0;
const int motionSensorPin = 2;
const int light3Pin = 12;
const int light4Pin = 13;

// States
bool light1State = false;
bool light2State = false;
bool buzzerState = false;
bool motionSensorEnabled = false;
bool light3State = false;
bool light4State = false;

unsigned long lastMotionTime = 0; // Tracks last motion detection
const unsigned long motionTimeout = 15000; // 15 seconds

ESP8266WebServer server(80);

void setup() {
  Serial.begin(115200);

  // Pin setup
  pinMode(light1Pin, OUTPUT);
  pinMode(light2Pin, OUTPUT);
  pinMode(buzzerPin, OUTPUT);
  pinMode(motionSensorPin, INPUT);
  pinMode(light3Pin, OUTPUT);
  pinMode(light4Pin, OUTPUT);

  digitalWrite(light1Pin, LOW);
  digitalWrite(light2Pin, LOW);
  digitalWrite(buzzerPin, LOW);
  digitalWrite(light3Pin, LOW);
  digitalWrite(light4Pin, LOW);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWi-Fi connected.");
  Serial.println(WiFi.localIP());

  // Web server routes
  server.on("/", handleRoot);
  server.on("/toggleLight1", toggleLight1);
  server.on("/toggleLight2", toggleLight2);
  server.on("/toggleBuzzer", toggleBuzzer);
  server.on("/toggleMotionSensor", toggleMotionSensor);
  server.on("/toggleLight3", toggleLight3);
  server.on("/toggleLight4", toggleLight4);

  server.begin();
  Serial.println("Web server started.");
}

void loop() {
  server.handleClient();

  // Motion sensor logic for Room 1
  if (motionSensorEnabled) {
    if (digitalRead(motionSensorPin) == HIGH) {
      // Motion detected
      lastMotionTime = millis();
      digitalWrite(light1Pin, HIGH);
      digitalWrite(light2Pin, HIGH);

      if (buzzerState) {
        digitalWrite(buzzerPin, HIGH);
        delay(5000);
        digitalWrite(buzzerPin, LOW);
      }
    } else if (millis() - lastMotionTime > motionTimeout) {
      // No motion detected for the timeout duration
      digitalWrite(light1Pin, LOW);
      digitalWrite(light2Pin, LOW);
    }
  }
}

// Web page content
String generateHTML() {
  String html = "<!DOCTYPE html><html><head><title>Smart Home</title>";
  html += "<style>button { padding: 10px; font-size: 16px; margin: 5px; }</style></head><body>";
  html += "<h1>Smart Home Control</h1>";
  
  // Room 1 Controls
  html += "<h2>Room 1</h2>";
  html += "<button onclick=\"toggle('toggleLight1')\">Light 1: " + String(light1State ? "On" : "Off") + "</button>";
  html += "<button onclick=\"toggle('toggleLight2')\">Light 2: " + String(light2State ? "On" : "Off") + "</button>";
  html += "<button onclick=\"toggle('toggleBuzzer')\">Buzzer: " + String(buzzerState ? "On" : "Off") + "</button>";
  html += "<button onclick=\"toggle('toggleMotionSensor')\">Motion Sensor: " + String(motionSensorEnabled ? "On" : "Off") + "</button>";
  
  // Room 2 Controls
  html += "<h2>Room 2</h2>";
  html += "<button onclick=\"toggle('toggleLight3')\">Light 1: " + String(light3State ? "On" : "Off") + "</button>";
  html += "<button onclick=\"toggle('toggleLight4')\">Light 2: " + String(light4State ? "On" : "Off") + "</button>";

  html += "<script>";
  html += "function toggle(endpoint) { fetch('/' + endpoint).then(() => location.reload()); }";
  html += "</script>";
  html += "</body></html>";
  return html;
}

// Web handlers
void handleRoot() {
  server.send(200, "text/html", generateHTML());
}

void toggleLight1() {
  if (!motionSensorEnabled) {
    light1State = !light1State;
    digitalWrite(light1Pin, light1State ? HIGH : LOW);
  }
  server.send(200, "text/plain", "OK");
}

void toggleLight2() {
  if (!motionSensorEnabled) {
    light2State = !light2State;
    digitalWrite(light2Pin, light2State ? HIGH : LOW);
  }
  server.send(200, "text/plain", "OK");
}

void toggleBuzzer() {
  buzzerState = !buzzerState;
  server.send(200, "text/plain", "OK");
}

void toggleMotionSensor() {
  motionSensorEnabled = !motionSensorEnabled;

  if (!motionSensorEnabled) {
    // Reset lights to manual mode
    digitalWrite(light1Pin, light1State ? HIGH : LOW);
    digitalWrite(light2Pin, light2State ? HIGH : LOW);
  }
  server.send(200, "text/plain", "OK");
}

void toggleLight3() {
  light3State = !light3State;
  digitalWrite(light3Pin, light3State ? HIGH : LOW);
  server.send(200, "text/plain", "OK");
}

void toggleLight4() {
  light4State = !light4State;
  digitalWrite(light4Pin, light4State ? HIGH : LOW);
  server.send(200, "text/plain", "OK");
}
